//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Player
{
    public partial class @PlayerInput : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""BirbActions"",
            ""id"": ""7b8421a3-0e18-42a6-87e8-0d92bbecd1c7"",
            ""actions"": [
                {
                    ""name"": ""Limbo"",
                    ""type"": ""Button"",
                    ""id"": ""6d926cc5-1457-43e0-b7c2-d09ea1f2135f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""0d8a39f8-2d1b-47cc-8f5c-518b24b373d7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""8c3e2942-f3fb-4d1e-9895-7acfaf6a9405"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c2fc33b3-6a78-4cb6-98e6-2237ad4b3a12"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4cee187a-d56c-49f6-8bca-6c2964fdcc6a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d6819f5d-d479-48a5-a861-3ca8081ef6e5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""89a97761-f27a-43cb-b9bc-9ad580867cf9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9afdf9f3-0104-41c0-9a78-c42b788ec01f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a37eab45-ea00-4176-bac4-448247a7317c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""26e5b4d5-ec93-47ff-9071-e24fa0a669c2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""efa72624-a95b-488b-9b07-134af2f67e56"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bd1a5a96-ceaf-4553-8d4a-2a5cc4bbf7dc"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a1b870ee-163d-4ca1-83a4-162c4d133a07"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Limbo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // BirbActions
            m_BirbActions = asset.FindActionMap("BirbActions", throwIfNotFound: true);
            m_BirbActions_Limbo = m_BirbActions.FindAction("Limbo", throwIfNotFound: true);
            m_BirbActions_Move = m_BirbActions.FindAction("Move", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // BirbActions
        private readonly InputActionMap m_BirbActions;
        private IBirbActionsActions m_BirbActionsActionsCallbackInterface;
        private readonly InputAction m_BirbActions_Limbo;
        private readonly InputAction m_BirbActions_Move;
        public struct BirbActionsActions
        {
            private @PlayerInput m_Wrapper;
            public BirbActionsActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Limbo => m_Wrapper.m_BirbActions_Limbo;
            public InputAction @Move => m_Wrapper.m_BirbActions_Move;
            public InputActionMap Get() { return m_Wrapper.m_BirbActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(BirbActionsActions set) { return set.Get(); }
            public void SetCallbacks(IBirbActionsActions instance)
            {
                if (m_Wrapper.m_BirbActionsActionsCallbackInterface != null)
                {
                    @Limbo.started -= m_Wrapper.m_BirbActionsActionsCallbackInterface.OnLimbo;
                    @Limbo.performed -= m_Wrapper.m_BirbActionsActionsCallbackInterface.OnLimbo;
                    @Limbo.canceled -= m_Wrapper.m_BirbActionsActionsCallbackInterface.OnLimbo;
                    @Move.started -= m_Wrapper.m_BirbActionsActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_BirbActionsActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_BirbActionsActionsCallbackInterface.OnMove;
                }
                m_Wrapper.m_BirbActionsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Limbo.started += instance.OnLimbo;
                    @Limbo.performed += instance.OnLimbo;
                    @Limbo.canceled += instance.OnLimbo;
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                }
            }
        }
        public BirbActionsActions @BirbActions => new BirbActionsActions(this);
        private int m_KeyboardSchemeIndex = -1;
        public InputControlScheme KeyboardScheme
        {
            get
            {
                if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
                return asset.controlSchemes[m_KeyboardSchemeIndex];
            }
        }
        public interface IBirbActionsActions
        {
            void OnLimbo(InputAction.CallbackContext context);
            void OnMove(InputAction.CallbackContext context);
        }
    }
}
